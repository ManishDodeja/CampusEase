package com.example.campusease

import android.annotation.SuppressLint
import android.app.AlertDialog
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import com.google.firebase.database.*

class SecurityQuestions : AppCompatActivity() {
    private lateinit var submitBtn: Button
    private lateinit var Question1:EditText
    private lateinit var Question2:EditText
    private lateinit var db: DatabaseReference
    private lateinit var msg:String
    private lateinit var newCourseList:ArrayList<String>
    private lateinit var cms:String;
    @SuppressLint("MissingInflatedId")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_security_questions)
        submitBtn=findViewById(R.id.SubmitSQButton)
        Question1=findViewById(R.id.question1EditText)
        Question2=findViewById(R.id.question2EditText)
        cms= intent.getStringExtra("cms").toString()
        db = FirebaseDatabase.getInstance("https://campuseasedatabase-d9f82-default-rtdb.asia-southeast1.firebasedatabase.app")
            .reference
        newCourseList= arrayListOf()
        checkCoursesValidity()
    }
    private fun checkCoursesValidity(){
        val coursesList=intent.getStringArrayListExtra("coursesList")
        msg="Course(s) with code(s) \n"
        val timetableRef=db.child("Timetable")
        timetableRef.addValueEventListener(object:ValueEventListener{
            override fun onDataChange(snapshot: DataSnapshot) {
                if (coursesList != null) {
                    for (i in coursesList){
                        if(!snapshot.hasChild(i.toString())) {
                            Toast.makeText(this@SecurityQuestions, "${i.toString()}",Toast.LENGTH_SHORT ).show()
                            msg+=i.toString()
                        }
                        else{
                            newCourseList.add(i)
                        }
                    }
                }
                msg+="are not offered in timetable"
            }
            override fun onCancelled(error: DatabaseError) {
                Toast.makeText(
                    this@SecurityQuestions,
                    "error in checking course",
                    Toast.LENGTH_SHORT
                ).show()
            }
        })
    }

    fun clickSubmit(view: View){
        // this will be used for context,
        // if the value is 1 the context is coming from genrated pass, and value is 2 the context will be generated by forgot pass
        val value= intent.getStringExtra("value").toString()
        val dbRef= db.child("SecurityQuestions")
        val studentCoursesRef=db.child("Students")
        //set password initially
        if(value=="1"){
            val question1=Question1.text.toString()
            val question2=Question2.text.toString()
            val data= Questions(question1, question2)
            if(newCourseList.isEmpty()) {
                val builder = AlertDialog.Builder(this)
                builder.setTitle("Information")
                builder.setMessage("The courses you have added are not offered in Timetable \n you have to enroll it")
                builder.setPositiveButton("OK") { dialog, which ->
                    dbRef.child("$cms").setValue(data)
                        .addOnSuccessListener {
                            val builder = AlertDialog.Builder(this)
                            builder.setTitle("Information")
                            builder.setMessage("Thank you for signup! \nYour Request have been forwarded to admin, you will be informed via email after verification process.")
                            builder.setPositiveButton("OK") { dialog, which ->
                                val intent = Intent(this, MainActivity::class.java)
                                intent.flags =
                                    Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK
                                startActivity(intent)
                            }
                            val dialog = builder.create()
                            dialog.show()

                        }
                        .addOnFailureListener {
                            Toast.makeText(
                                this@SecurityQuestions,
                                "Failing to add SQ",
                                Toast.LENGTH_SHORT
                            ).show()
                        }
                }

                val dialog = builder.create()
                dialog.show()
            }
            else if(!newCourseList.isEmpty()){
                val builder = AlertDialog.Builder(this)
                builder.setTitle("Information")
                builder.setMessage(msg+ "\n Remaining courses have been added")
                builder.setPositiveButton("OK") { dialog, which ->
                    studentCoursesRef.child("$cms").child("courses").setValue(newCourseList)
                        .addOnSuccessListener {
                            dbRef.child("$cms").setValue(data)
                                .addOnSuccessListener {
                                    val builder = AlertDialog.Builder(this)
                                    builder.setTitle("Information")
                                    builder.setMessage("Thank you for signup! \nYour Request have been forwarded to admin, you will be informed via email after verification process.")
                                    builder.setPositiveButton("OK") { dialog, which ->
                                        val intent = Intent(this, MainActivity::class.java)
                                        intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK
                                        startActivity(intent)
                                    }
                                    val dialog = builder.create()
                                    dialog.show()

                                }
                                .addOnFailureListener{
                                    Toast.makeText(this@SecurityQuestions, "Failing to add SQ", Toast.LENGTH_SHORT).show()
                                }
                        }
                }
                val dialog = builder.create()
                dialog.show()
            }
            else{
                dbRef.child("$cms").setValue(data)
                    .addOnSuccessListener {
                        val builder = AlertDialog.Builder(this)
                        builder.setTitle("Information")
                        builder.setMessage("Thank you for signup! \nYour Request have been forwarded to admin, you will be informed via email after verification process.")
                        builder.setPositiveButton("OK") { dialog, which ->
                            val intent = Intent(this, MainActivity::class.java)
                            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK
                            startActivity(intent)
                        }
                        val dialog = builder.create()
                        dialog.show()

                    }
                    .addOnFailureListener{
                        Toast.makeText(this@SecurityQuestions, "Failing to add SQ", Toast.LENGTH_SHORT).show()
                    }
            }


        }

        if(value=="2"){
            dbRef.child("$cms").addValueEventListener(object:ValueEventListener{
                override fun onDataChange(snapshot: DataSnapshot) {
                    if(snapshot.exists()){
                        val obj= snapshot.getValue(Questions::class.java)
                        val question1=obj!!.question1.toString()
                        val question2=obj!!.question2.toString()
                        if(question1==Question1.text.toString()){
                            if(question2==Question2.text.toString()){
                                val intent=Intent(this@SecurityQuestions,UpdatePassword::class.java)
                                intent.putExtra("cms", cms)
                                startActivity(intent)
                            }
                        }
                        else{
                            Toast.makeText(this@SecurityQuestions, "Incorrect Answer", Toast.LENGTH_SHORT).show()
                        }
                    }
                }
                override fun onCancelled(error: DatabaseError) {
                    Toast.makeText(this@SecurityQuestions, "${error.message}", Toast.LENGTH_SHORT).show()
                }
            })
        }
    }

    data class Questions(val question1:String?=null, val question2:String?=null)
}